dictionary {

	verb(names: "?", action: "UnknownVerb") {
		response(id: "unknown-verb", string: "I don't know what you're saying.")
	}

	verb(names: "clear, cls, erase, clean, cleanse", action: "Clear")

	verb(names: "save", action: "SaveGame") {
		response(id: "game-saved", string: "Game saved.")
		response(id: "cancel-error", string: "¡Game NOT saved!")
	}

	verb(names: "load", action: "LoadGame") {
		response(id: "game-loaded", string: "Game loaded.")
		response(id: "cancel-error", string: "¡Game NOT loaded!")
	}

	verb(names: "inventory, i, inv", action: "Inventory") {
		response(id: "inventory-is-empty", string: "I have nothing in my possession.")
		response(id: "syntax-fail", string: "Type 'inventory' or 'i' to see what I am carrying.")
	}

	verb(names: "examine, look, see, find, seek, ex, x, l",
			action: "LookInside", syntax: "in/on/inner, 1") {
		response(id: "direct-not-found", string: "I can't find that.")
		response(id: "direct-is-the-player", string: "You can try: inventory or i.")
		response(id: "direct-is-not-container", string: "I can't see inside #1.")
		response(id: "direct-is-closed", string: "#^1 @1(is,is,are,are) closed.")
		response(id: "container-is-empty", string: "There is nothing in #1.")
	}

	verb(names: "examine, look, see, find, seek, ex, x, l",
			action: "ExamineObject", syntax: "to, 1") {
		response(id: "direct-not-found", string: "There is none of that.")
	}

	verb(names: "examine, look, see, find, seek, ex, x, l",
			action: "ExamineObject", syntax: "1") {
		response(id: "direct-not-found", string: "There is none of that.")
	}

	verb(names: "examine, look, see, find, seek, ex, x, l",
			action: "LookAround")

	verb(names: "examineme, lookme, im, iam",
			action: "ExamineMe")

	verb(names: "take, grab, pick, collect, get, obtain, seize, extract, gather, snatch",
		syntax: "1, from/of, 2", action: "TakeFrom") {
		response(id: "indirect-not-found", string: "I don't know where you want to take it from.")
		response(id: "indirect-is-not-container", string: "I can't take things from #2.")
		response(id: "indirect-is-closed", string: "#2 @2(is,is,are,are) closed.")
		response(id: "direct-not-found", string: "#^2 does not contain that.")
		response(id: "direct-taken", string: "I take #1 out of #2.")
		response(id: "syntax-fail", string: "You need to specify what I should take out.")
	}

	verb(names: "take, grab, pick, collect, get, obtain, seize",
		syntax: "1", action: "TakeObject") {
		response(id: "direct-not-found", string: "There is none of that.")
		response(id: "direct-is-the-player", string: "I can't take myself.")
		response(id: "direct-is-fixed", string: "I can't take #1")
		response(id: "direct-is-heavy", string: "#^1 @1(is,is,are,are) too heavy for me to carry @1(it,her,them,them).")
		response(id: "direct-taken", string: "I pick up #1.")
	}

	verb(names: "leave, let, release, drop, forget, place, put, set, insert, deposit, situate",
		syntax: "1, in/inside/within/into/internally/Into the interior of, 2", action: "LeaveIn") {
		response(id: "indirect-not-found", string: "I can't leave it there.")
		response(id: "direct-not-found", string: "I don't have that.")
		response(id: "direct-is-the-player", string: "Put that in me?")
		response(id: "indirect-is-not-container", string: "I can't put #1 into #2.")
		response(id: "indirect-is-closed", string: "#^2 @2(is,is,are,are) closed.")
		response(id: "direct-leaved", string: "I leave #1 in #2.")
		response(id: "syntax-fail", string: "You need to say what I should leave.")
	}

	verb(names: "go, travel, walk", action: "GoTo",
		syntax: "to/into/towards/for, 1") {
		response(id: "exit-not-exists", string: "I don't know that direction.")
		response(id: "exit-not-found", string: "I can't go that way.")
	}

	verb(names: "leave, release, drop, forget", action: "LeaveObject",
		syntax: "1") {
		response(id: "direct-not-found", string: "I don't have that.")
		response(id: "direct-left", string: "I leave #1.")
	}

	verb(names: "open", action: "OpenWith",
		syntax: "1, with/using, 2") {
		response(id: "direct-not-found", string: "Not exists.")
		response(id: "indirect-not-found", string: "I don't have that to open.")
		response(id: "direct-is-the-player", string: "I can't open myself.")
		response(id: "indirect-is-the-player", string: "I'm not a key.")
		response(id: "direct-is-not-closable", string: "#^1 can't be opened.")
		response(id: "direct-is-open", string: "#^1 @1(is,is,are,are) already open.")
		response(id: "nothing-happens", string: "I can't open #1 with that.")
		response(id: "syntax-fail", string: "Try 'open object' or 'open object with another'.")
	}

	verb(names: "close", action: "CloseWith",
		syntax: "1, with/using, 2") {
		response(id: "direct-not-found", string: "Not exists.")
		response(id: "indirect-not-found", string: "I don't have that to close.")
		response(id: "direct-is-the-player", string: "I can't close myself.")
		response(id: "indirect-is-the-player", string: "I'm not a key.")
		response(id: "direct-is-not-closable", string: "#^1 can't be closed.")
		response(id: "direct-is-closed", string: "#^1 @1(is,is,are,are) already closed.")
		response(id: "nothing-happens", string: "I can't close #1 with that.")
		response(id: "syntax-fail", string: "Try 'close object' or 'close object with another'.")
	}

	verb(names: "open", action: "OpenObject", syntax: "1") {
		response(id: "direct-not-found", string: "There's nothing to open.")
		response(id: "direct-is-the-player", string: "I can't open myself.")
		response(id: "direct-is-not-closable", string: "#^1 can't be opened.")
		response(id: "direct-is-open", string: "#^1 @1(is,is,are,are) already open.")
		response(id: "direct-was-opened", string: "I open #1.")
	}

	verb(names: "close", action: "CloseObject", syntax: "1") {
		response(id: "direct-not-found", string: "There's nothing to close.")
		response(id: "direct-is-the-player", string: "I can't close myself.")
		response(id: "direct-is-not-closable", string: "#^1 can't be close.")
		response(id: "direct-is-closed", string: "#^1 @1(is,is,are,are) already close.")
		response(id: "direct-was-closed", string: "I close #1.")
	}

	verb(names: "pull", action: "PullObject", syntax: "1") {
		response(id: "direct-not-found", string: "Not exists.")
		response(id: "direct-is-the-player", string: "Pull myself?.")
		response(id: "direct-is-fixed", string: "I can't pull #1.")
		response(id: "nothing-happens", string: "Pulling #1 doesn’t do anything.")
		response(id: "syntax-fail", string: "I don't know what to pull.")
	}

	verb(names: "push, move", action: "PushObject", syntax: "1") {
		response(id: "direct-not-found", string: "That thing I want to push isn't there.")
		response(id: "direct-is-the-player", string: "I can't push myself.")
		response(id: "direct-is-fixed", string: "#^1 @1(is,is,are,are) fixed.")
		response(id: "nothing-happens", string: "Nothing happens when I push #1.")
		response(id: "syntax-fail", string: "I don't know what to push.")
	}

	verb(names: "press, tap, hold", action: "PressObject", syntax: "1") {
		response(id: "direct-not-found", string: "Not exists.")
		response(id: "direct-is-the-player", string: "I'm not a button.")
		response(id: "nothing-happens", string: "It doesn't make sense to do that with #1.")
		response(id: "syntax-fail", string: "I don't know what to press.")
	}

	verb(names: "cut, slice, chop, slash", action: "CutWith",  
		syntax: "1, with/using, 2") {  
		response(id: "direct-not-found", string: "That doesn't exist to cut.")  
		response(id: "indirect-not-found", string: "I don't have that to cut with.")  
		response(id: "direct-is-the-player", string: "I'm not cutting myself.")  
		response(id: "indirect-is-the-player", string: "I'm not a sword.")  
		response(id: "nothing-happens", string: "I can't cut #1 with that.")  
		response(id: "syntax-fail", string: "Try 'cut object' or 'cut object with another'.")  
	}

	verb(names: "cut, slice, chop, slash", action: "CutObject", syntax: "1") {  
		response(id: "direct-not-found", string: "There is no such thing to cut.")  
		response(id: "direct-is-the-player", string: "I’m not doing that.")  
		response(id: "nothing-happens", string: "That can't be cut.")  
	}

	verb(names: "tie, knot", action: "TieWith", syntax: "1, with/using, 2") {  
		response(id: "direct-not-found", string: "There is no such thing to tie.")  
		response(id: "indirect-not-found", string: "I don't have anything to tie that with.")  
		response(id: "direct-is-the-player", string: "I’m not tying myself to anything!")  
		response(id: "indirect-is-the-player", string: "You’re crazy.")  
		response(id: "nothing-happens", string: "I can't tie #1 with #2.")  
		response(id: "syntax-fail", string: "Try with 'tie object', 'tie object with another', or 'tie object to another'.")  
	}

	verb(names: "tie, knot", action: "TieTo", syntax: "1, to, 2") {  
		response(id: "direct-not-found", string: "I can't tie it to something that isn't there.")  
		response(id: "indirect-not-found", string: "That thing I want to tie doesn’t exist.")  
		response(id: "direct-is-the-player", string: "I’m not tying myself to anything!")  
		response(id: "indirect-is-the-player", string: "You’re crazy.")  
		response(id: "nothing-happens", string: "I can't tie #1 to #2.")  
		response(id: "syntax-fail", string: "Try with 'tie object', 'tie object with another', or 'tie object to another'.")  
	}

	verb(names: "tie, knot", action: "TieObject", syntax: "1") {  
		response(id: "direct-not-found", string: "That’s not here.")  
		response(id: "direct-is-the-player", string: "I don’t have any laces.")  
		response(id: "nothing-happens", string: "It doesn't make sense to tie that.")  
	}

	verb(names: "read, interpret, comprehend", action: "ReadObject", syntax: "1") {  
		response(id: "direct-not-found", string: "There’s nothing like that to read.")  
		response(id: "direct-is-the-player", string: "I’m not a book.")  
		response(id: "nothing-happens", string: "That can’t be read.")  
	}

	verb(names: "smoke", action: "SmokeObject", syntax: "1") {
		response(id: "direct-not-found", string: "That isn't here.")
		response(id: "direct-is-the-player", string: "I don't look like a cigarette.")
		response(id: "nothing-happens", string: "That doesn't make any sense.")
	}

	verb(names: "turn", action: "TurnOnObject", syntax: "on, 1") {
		response(id: "direct-not-found", string: "There's nothing to turn on.")
		response(id: "direct-is-the-player", string: "I'm not a flashlight.")
		response(id: "nothing-happens", string: "That can't be turned on.")
	}

	verb(names: "turn", action: "TurnOffObject", syntax: "off, 1") {
		response(id: "direct-not-found", string: "There's nothing to turn off.")
		response(id: "direct-is-the-player", string: "I'm not a flashlight.")
		response(id: "nothing-happens", string: "That can't be turned off.")
	}

	verb(names: "turn, rotate, twist, spin", action: "TurnObject", syntax: "1") {
		response(id: "direct-not-found", string: "That doesn't exist.")
		response(id: "direct-is-the-player", string: "What?")
		response(id: "nothing-happens", string: "Nothing happens when you turn it.")
	}

	verb(names: "touch, stroke, tap, feel", action: "TouchObject", syntax: "1") {
		response(id: "direct-not-found", string: "That doesn't exist.")
		response(id: "direct-is-the-player", string: "I don't feel the need for that...")
		response(id: "nothing-happens", string: "Nothing happens.")
	}

	verb(names: "hit, strike, punch, smack", action: "HitObject", syntax: "1") {
		response(id: "direct-not-found", string: "That doesn't exist.")
		response(id: "direct-is-the-player", string: "I'm not at that point yet.")
		response(id: "nothing-happens", string: "Nothing happens.")
	}

	verb(names: "blow, puff, exhale", action: "BlowObject", syntax: "1") {
		response(id: "direct-not-found", string: "That doesn't exist.")
		response(id: "direct-is-the-player", string: "I'm not on fire.")
		response(id: "nothing-happens", string: "Nothing happens.")
	}

	verb(names: "follow, pursue, accompany, stalk", action: "FollowObject", syntax: "to, 1") {
		response(id: "direct-not-found", string: "Not found.")
		response(id: "direct-is-the-player", string: "I am already here.")
		response(id: "nothing-happens", string: "I cannot follow@1 (him, her, them, them).")
	}

	verb(names: "follow, pursue, accompany, stalk", action: "FollowObject", syntax: "1") {
		response(id: "direct-not-found", string: "Not found.")
		response(id: "direct-is-the-player", string: "I am already here.")
		response(id: "nothing-happens", string: "I cannot follow @1(him, her, them, them).")
	}

	verb(names: "speak, talk, say, pronounce", action: "TalkTo", syntax: "with/to, 1, ...") {
		response(id: "direct-not-found", string: "The one I want to talk to isn't here.")
		response(id: "direct-is-the-player", string: "I'm not crazy to talk to myself.")
		response(id: "direct-is-not-speaker", string: "#^1 doesn't speak.")
		response(id: "nothing-happens", string: "#^1 doesn't respond.")
	}

	verb(names: "speak, talk, say, pronounce", action: "Talk", syntax: "...") {
		response(id: "player-says", string: "I say: '%3'")
	}

	verb(names: "give, offer, lend, provide", action: "GiveTo", syntax: "1, to, 2") {
		response(id: "direct-not-found", string: "I don't have it.")
		response(id: "indirect-not-found", string: "It is not here.")
		response(id: "indirect-is-the-player", string: "I already have it.")
		response(id: "indirect-is-not-interactive", string: "I can't give #1 to #2.")
		response(id: "given-to-indirect", string: "I give #1 to #2.")
	}

	article(name: "the", genre: "male", number: "singular", indefinited: "false")
	article(name: "the", genre: "female", number: "singular", indefinited: "false")
	article(name: "the", genre: "male", number: "plural", indefinited: "false")
	article(name: "the", genre: "female", number: "plural", indefinited: "false")

	article(name: "a", genre: "male", number: "singular", indefinited: "true")
	article(name: "a", genre: "female", number: "singular", indefinited: "true")
	article(name: "a", genre: "male", number: "plural", indefinited: "true")
	article(name: "a", genre: "female", number: "plural", indefinited: "true")

	exit(names: "north, n")
	exit(names: "south, s")
	exit(names: "east, e")
	exit(names: "west, w")

	exit(names: "northeast, ne")
	exit(names: "northwest, nw")
	exit(names: "southeast, se")
	exit(names: "southwest, sw")

	exit(names: "up, u, climb, ascend")
	exit(names: "down, d, descend")
	exit(names: "inside, in, enter")
	exit(names: "outside, out, leave, exit")
}
